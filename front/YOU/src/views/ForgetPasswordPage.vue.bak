<template>
  <div id="passContainer">
    <Card shadow class="passArea">
      <Row class="titleArea">
        <!-- <Col class="title">{{this.$store.getters.siteInfo.siteName}}</Col> -->
        <Col class="title">永航员工自助系统</Col>
        <Col class="subtitle">{{this.$store.getters.siteInfo.siteEngName}}</Col>
      </Row>

      <Row class="passTypeArea">
        <Col span="24">
          <Tabs class="passTabs">
            <TabPane label="重置密码">
              <Form class="passFormArea" ref="passForm" :model="formItem" :rules="validateRule">
                <FormItem prop="userId">
                  <Input
                    v-model="formItem.userId"
                    placeholder="用户代码"
                    :disabled="this.$store.getters.isLoading"
                  >
                    <Icon class="icon" type="md-person" slot="prepend"></Icon>
                  </Input>
                </FormItem>
                <FormItem prop="mail">
                  <Input
                    v-model="formItem.mail"
                    placeholder="用户邮箱"
                    :disabled="this.$store.getters.isLoading"
                  >
                    <Icon class="icon" type="md-mail" slot="prepend"></Icon>
                  </Input>
                </FormItem>
                <FormItem prop="verificationCode">
                  <Row>
                    <Col span="14">
                      <Input
                        v-model="formItem.verificationCode"
                        placeholder="验证码"
                        :disabled="this.$store.getters.isLoading"
                      >
                        <Icon class="icon" type="md-key" slot="prepend"></Icon>
                      </Input>
                    </Col>
                    <Col span="1" offset="1">
                      <Button
                        type="primary"
                        @click="getVerificationCode"
                        :disabled="disabled"
                      >{{btntxt}}</Button>
                    </Col>
                  </Row>
                </FormItem>
                <FormItem prop="newPassword">
                  <Input
                    type="password"
                    v-model="formItem.newPassword"
                    placeholder="新密码"
                    :disabled="this.$store.getters.isLoading"
                  >
                    <Icon class="icon" type="md-lock" slot="prepend"></Icon>
                  </Input>
                </FormItem>
                <Row style="justify-content: center;">
                  <Col style="text-align: center;display:flex; ">
                    <Button
                      type="primary"
                      @click="updPass"
                      :disabled="this.$store.getters.isLoading"
                    >确认修改</Button>
                    <Button
                      style="margin-left: 8px"
                      @click="reseting"
                      :disabled="this.$store.getters.isLoading"
                    >重 填</Button>
                    <Button
                      style="margin-left: 8px"
                      @click="returnLogin"
                      :disabled="this.$store.getters.isLoading"
                    >返回登录</Button>
                  </Col>
                </Row>
              </Form>
            </TabPane>
          </Tabs>
        </Col>
      </Row>
    </Card>
  </div>
</template>

<script>
import APIUtil from "../util/APIUtil";
import ProcessUtil from "../util/ProcessUtil";

export default {
  data() {
    return {
      formItem: {
        userId: "",
        mail: "",
        verificationCode: "",
        newPassword: ""
      },
      disabled: false,
      btntxt: "获取验证码",
      time: 120
    };
  },
  mounted: function() {
   setTimeout(_ => {
           this.reseting()
               
    }, 1000)
    // 清空当前页面定义
    this.$store.commit("clearCurPage");
  },
  methods: {
    returnLogin() {
      this.$router.push('/login')
    },
    //发送手机验证码倒计时
    timer() {
      if (this.time > 0) {
        this.disabled = true;
        this.time--;
        this.btntxt = this.time + "秒";
        setTimeout(this.timer, 1000);
      } else {
        this.time = 0;
        this.btntxt = "获取验证码";
        this.disabled = false;
      }
    },
    // 用户登录处理
    updPass() {
      var me = this;
      APIUtil.updPass(
        this,
        this.formItem.userId,
        this.formItem.mail,
        this.formItem.verificationCode,
        this.formItem.newPassword
      ).then(result => {
        if (result) {
          me.$Message.info(result);
          me.$router.push(this.generateNextUrl());
        }
      });
    },
    // 获取验证码
    getVerificationCode() {
      var me = this;
      APIUtil.getVerificationCode(
        this,
        this.formItem.userId,
        this.formItem.mail
      ).then(result => {
        if (result) {
          me.$Message.info(result);
          this.time = 120;
          this.timer();
        }
      });
    },
    // 重置画面
    reseting() {
      var util = new ProcessUtil();
      util.vueinstance = this;
      util.clear(this.formItem);
    },
    // 生成下一个页面
    generateNextUrl() {
      // 次页面
      var nextPage = this.$store.getters.siteInfo.defaultPageid;

      // 页面组ID
      var groupId = this.$route.params.group_id;
      // 页面ID
      var pageId = this.$route.params.page_id;
      // 站点ID
      var siteId = this.$route.params.site_id;
      if (groupId) {
        nextPage = "/" + groupId + "/" + pageId;
        if (siteId) {
          nextPage = "/" + siteId + nextPage;
        }

        if (this.$route.query) {
          let isFirst = true;
          for (let key in this.$route.query) {
            if (isFirst) {
              nextPage = nextPage + "?";
            } else {
              nextPage = nextPage + "&";
            }
            nextPage = nextPage + key + "=" + this.$route.query[key];
            isFirst = false;
          }
        }
      }

      return nextPage;
    }
  }
};
</script>

<style scoped>
#passContainer {
  position: fixed;
  height: 100%;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: Center;
  background-image: url("../assets/loginBack.jpg");
  background-repeat: no-repeat;
  background-size: 100% 100%;
}

@media (max-width: 576px) {
  #passContainer {
    background-image: url("../assets/loginBack.jpg");
  }
}

#passContainer .passArea {
  background-color: rgba(0, 0, 0, 0.4);
  width: 420px;
  border-radius: 5px;
  padding: 0px;
}

#passContainer .titleArea {
  margin: 5px 0px 20px 0px;
}

#passContainer .titleArea .title {
  text-align: center;
  color: rgba(255, 255, 255, 0.8);
  font-size: 20px;
}

#passContainer .titleArea .subtitle {
  text-align: center;
  color: rgba(255, 255, 255, 0.8);
  font-size: 14px;
}

#passContainer .passTypeArea {
  background-color: rgba(255, 255, 255, 0.8);
  border-radius: 5px;
  padding: 0px 5px;
  margin: 20px 0px 0px 0px;
}

#passContainer .passTabs /deep/ .ivu-tabs-nav {
  float: none;
  display: flex;
}

#passContainer .passTabs /deep/ .ivu-tabs-nav .ivu-tabs-tab {
  flex: 1;
  text-align: center;
}

#passContainer .passFormArea {
  padding: 15px 50px 25px 50px;
}

#passContainer .ivu-input-group-prepend {
  background-color: rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-right: 0px;
  color: rgba(255, 255, 255, 0.8);
}

#passContainer .icon {
  font-size: 16px;
}

#passContainer input {
  background-color: rgba(0, 0, 0, 0.3);
  border: 1px solid rgba(255, 255, 255, 0.3);
  color: rgba(255, 255, 255, 0.8);
}

#passContainer button {
  width: 100px;
}
</style>
